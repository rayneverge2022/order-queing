<%- include('layout', {
    title: 'Status Overview',
    path: '/admin/status-overview',
    style: `
        <style>
            .status-card {
                transition: transform 0.2s;
                margin-bottom: 1rem;
            }
            .status-card:hover {
                transform: translateY(-5px);
            }
            .status-count {
                font-size: 2rem;
                font-weight: bold;
                color: #2c3e50;
            }
            .status-label {
                color: #7f8c8d;
                font-size: 1.1rem;
            }
            .status-table {
                margin-top: 2rem;
            }
            .nav-pills .nav-link {
                color: #2c3e50;
                margin-right: 0.5rem;
            }
            .nav-pills .nav-link.active {
                background-color: #3498db;
            }
            .badge {
                margin-left: 0.5rem;
            }
            .table th {
                background-color: #f8f9fa;
            }
        </style>
    `,
    body: `
        <div class="container-fluid">
            <!-- Status Overview Cards -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Order Status Overview</h5>
                            <div class="row g-4 mt-2">
                                <div class="col-md-3">
                                    <div class="card status-card">
                                        <div class="card-body text-center">
                                            <div class="status-count" id="receivedCount">0</div>
                                            <div class="status-label">Received</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card status-card">
                                        <div class="card-body text-center">
                                            <div class="status-count" id="settingsCount">0</div>
                                            <div class="status-label">Settings</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card status-card">
                                        <div class="card-body text-center">
                                            <div class="status-count" id="printingCount">0</div>
                                            <div class="status-label">Printing</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card status-card">
                                        <div class="card-body text-center">
                                            <div class="status-count" id="finishingCount">0</div>
                                            <div class="status-label">Finishing</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card status-card">
                                        <div class="card-body text-center">
                                            <div class="status-count" id="releasingCount">0</div>
                                            <div class="status-label">Releasing</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card status-card">
                                        <div class="card-body text-center">
                                            <div class="status-count" id="billingCount">0</div>
                                            <div class="status-label">Billing</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card status-card">
                                        <div class="card-body text-center">
                                            <div class="status-count" id="completedCount">0</div>
                                            <div class="status-label">Completed</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Orders by Status -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Orders by Status</h5>
                            <ul class="nav nav-pills mb-3" id="statusTabs" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" data-bs-toggle="pill" data-bs-target="#received" type="button">
                                        Received <span class="badge bg-secondary" id="receivedBadge">0</span>
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" data-bs-toggle="pill" data-bs-target="#settings" type="button">
                                        Settings <span class="badge bg-secondary" id="settingsBadge">0</span>
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" data-bs-toggle="pill" data-bs-target="#printing" type="button">
                                        Printing <span class="badge bg-secondary" id="printingBadge">0</span>
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" data-bs-toggle="pill" data-bs-target="#finishing" type="button">
                                        Finishing <span class="badge bg-secondary" id="finishingBadge">0</span>
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" data-bs-toggle="pill" data-bs-target="#releasing" type="button">
                                        Releasing <span class="badge bg-secondary" id="releasingBadge">0</span>
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" data-bs-toggle="pill" data-bs-target="#billing" type="button">
                                        Billing <span class="badge bg-secondary" id="billingBadge">0</span>
                                    </button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" data-bs-toggle="pill" data-bs-target="#completed" type="button">
                                        Completed <span class="badge bg-secondary" id="completedBadge">0</span>
                                    </button>
                                </li>
                            </ul>

                            <div class="tab-content" id="statusTabContent">
                                <div class="tab-pane fade show active" id="received" role="tabpanel">
                                    <div class="d-flex justify-content-end mb-3">
                                        <button class="btn btn-outline-primary btn-sm me-2" onclick="exportData('received', 'excel')">
                                            <i class="bi bi-file-earmark-excel"></i> Export to Excel
                                        </button>
                                        <button class="btn btn-outline-secondary btn-sm" onclick="exportData('received', 'csv')">
                                            <i class="bi bi-file-earmark-text"></i> Export to CSV
                                        </button>
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table table-hover" id="receivedTable">
                                            <thead>
                                                <tr>
                                                    <th>ID</th>
                                                    <th>Job Order ID</th>
                                                    <th>Customer</th>
                                                    <th>Details</th>
                                                    <th>Created At</th>
                                                    <th>Settings Time</th>
                                                    <th>Printing Time</th>
                                                    <th>Finishing Time</th>
                                                    <th>Releasing Time</th>
                                                    <th>Billing Time</th>
                                                    <th>Completed Time</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                                <!-- Other status tabs will be created dynamically -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `,
    script: `
        <script>
            const statuses = ['received', 'settings', 'printing', 'finishing', 'releasing', 'billing', 'completed'];
            let allOrders = [];

            // Create table template for each status
            function createStatusTable(status) {
                if (status === 'received') return; // Skip received as it's already in the HTML
                const template = \`
                    <div class="tab-pane fade" id="\${status}" role="tabpanel">
                        <div class="d-flex justify-content-end mb-3">
                            <button class="btn btn-outline-primary btn-sm me-2" onclick="exportData('\${status}', 'excel')">
                                <i class="bi bi-file-earmark-excel"></i> Export to Excel
                            </button>
                            <button class="btn btn-outline-secondary btn-sm" onclick="exportData('\${status}', 'csv')">
                                <i class="bi bi-file-earmark-text"></i> Export to CSV
                            </button>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover" id="\${status}Table">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Job Order ID</th>
                                        <th>Customer</th>
                                        <th>Details</th>
                                        <th>Created At</th>
                                        <th>\${status.charAt(0).toUpperCase() + status.slice(1)} Time</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                \`;
                document.getElementById('statusTabContent').insertAdjacentHTML('beforeend', template);
            }

            // Initialize tables for all statuses
            statuses.forEach(status => {
                if (status !== 'received') createStatusTable(status);
            });

            function formatDate(date) {
                const options = { 
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                };
                return new Date(date).toLocaleString('en-US', options);
            }

            // Get formatted timestamp or default value
            function getFormattedTimestamp(order, field) {
                return order[field] ? formatDate(order[field]) : '-';
            }

            // Update tables with orders
            function updateTables(orders) {
                // Reset counts
                statuses.forEach(status => {
                    document.getElementById(\`\${status}Count\`).textContent = '0';
                    document.getElementById(\`\${status}Badge\`).textContent = '0';
                    const tbody = document.querySelector(\`#\${status}Table tbody\`);
                    if (tbody) tbody.innerHTML = '';
                });

                // Group orders by status
                const ordersByStatus = {};
                statuses.forEach(status => ordersByStatus[status] = []);

                orders.forEach(order => {
                    if (ordersByStatus[order.status]) {
                        ordersByStatus[order.status].push(order);
                    }
                });

                // Update tables and counts
                statuses.forEach(status => {
                    const statusOrders = ordersByStatus[status] || [];
                    document.getElementById(\`\${status}Count\`).textContent = statusOrders.length;
                    document.getElementById(\`\${status}Badge\`).textContent = statusOrders.length;

                    const tbody = document.querySelector(\`#\${status}Table tbody\`);
                    if (tbody) {
                        tbody.innerHTML = statusOrders.map(order => \`
                            <tr>
                                <td>#\${order.id}</td>
                                <td>\${order.job_order_id || '-'}</td>
                                <td>\${order.customer_name}</td>
                                <td>\${order.project_details}</td>
                                <td>\${formatDate(order.created_at)}</td>
                                <td>\${getFormattedTimestamp(order, \`\${status}_timestamp\`)}</td>
                            </tr>
                        \`).join('');
                    }
                });
            }

            async function loadOrders() {
                try {
                    const response = await fetch('/api/orders');
                    if (!response.ok) throw new Error('Failed to fetch orders');
                    
                    allOrders = await response.json();
                    updateTables(allOrders);
                } catch (error) {
                    console.error('Error loading orders:', error);
                }
            }

            // Export data function
            async function exportData(status, format) {
                try {
                    const statusOrders = allOrders.filter(order => order.status === status);
                    
                    if (statusOrders.length === 0) {
                        alert('No orders to export for this status.');
                        return;
                    }

                    // Convert orders to CSV or prepare for Excel
                    let data;
                    const headers = [
                        'ID', 
                        'Job Order ID', 
                        'Customer', 
                        'Details', 
                        'Created At',
                        \`\${status.charAt(0).toUpperCase() + status.slice(1)} Time\`
                    ];
                    
                    if (format === 'csv') {
                        // Create CSV content
                        data = [headers.join(',')];
                        statusOrders.forEach(order => {
                            data.push([
                                order.id,
                                order.job_order_id || '',
                                order.customer_name,
                                order.project_details,
                                formatDate(order.created_at),
                                getFormattedTimestamp(order, \`\${status}_timestamp\`)
                            ].join(','));
                        });
                        data = data.join('\\n');
                        
                        // Create and download file
                        const blob = new Blob([data], { type: 'text/csv' });
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = \`orders_\${status}_\${formatDate(new Date())}.csv\`;
                        document.body.appendChild(a);
                        a.click();
                        a.remove();
                    } else if (format === 'excel') {
                        // For Excel, we'll send to server endpoint
                        const response = await fetch(\`/api/orders/export?status=\${status}&format=excel\`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(statusOrders)
                        });
                        
                        if (!response.ok) throw new Error('Export failed');
                        
                        const blob = await response.blob();
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = \`orders_\${status}_\${formatDate(new Date())}.xlsx\`;
                        document.body.appendChild(a);
                        a.click();
                        a.remove();
                    }
                } catch (error) {
                    console.error('Error exporting data:', error);
                    alert('Failed to export data. Please try again.');
                }
            }

            // Initial load
            loadOrders();

            // Refresh data every minute
            setInterval(loadOrders, 60000);
        </script>
    `
}) %>
