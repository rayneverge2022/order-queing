<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .status-badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8em;
            font-weight: bold;
        }
        .status-received { background-color: #ffd700; }
        .status-printing { background-color: #87ceeb; }
        .status-packaging { background-color: #98fb98; }
        .status-completed { background-color: #90ee90; }
    </style>
</head>
<body>
    <%- include('layout', {
        title: 'Order Management',
        path: '/admin',
        style: `
            <style>
                .status-badge {
                    padding: 5px 10px;
                    border-radius: 15px;
                    font-size: 0.8em;
                    font-weight: bold;
                }
                .status-received { background-color: #ffd700; }
                .status-printing { background-color: #87ceeb; }
                .status-packaging { background-color: #98fb98; }
                .status-completed { background-color: #90ee90; }
            </style>
        `,
        body: `
            <!-- Order Management Content -->
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Customer Name</th>
                                    <th>Project Details</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="ordersTableBody">
                                <!-- Orders will be populated here -->
                            </tbody>
                        </table>
                        <nav>
                            <ul class="pagination justify-content-center" id="pagination">
                                <!-- Pagination will be populated here -->
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        `,
        script: `
            <script>
                let currentPage = 1;
                const ordersPerPage = 5;

                async function fetchOrders() {
                    try {
                        const response = await fetch('/api/orders');
                        const orders = await response.json();
                        
                        // Calculate pagination
                        const totalPages = Math.ceil(orders.length / ordersPerPage);
                        const startIndex = (currentPage - 1) * ordersPerPage;
                        const endIndex = startIndex + ordersPerPage;
                        const currentOrders = orders.slice(startIndex, endIndex);

                        // Update table
                        const tableBody = document.getElementById('ordersTableBody');
                        tableBody.innerHTML = currentOrders.map(order => \`
                            <tr>
                                <td>\${order.id}</td>
                                <td>\${order.customer_name}</td>
                                <td>\${order.project_details}</td>
                                <td><span class="status-badge status-\${order.status}">\${order.status}</span></td>
                                <td>
                                    \${getActionButtons(order.status, order.id)}
                                </td>
                            </tr>
                        \`).join('');

                        // Update pagination
                        const pagination = document.getElementById('pagination');
                        pagination.innerHTML = \`
                            <li class="page-item \${currentPage === 1 ? 'disabled' : ''}">
                                <a class="page-link" href="#" onclick="changePage(\${currentPage - 1})">Previous</a>
                            </li>
                            \${Array.from({length: totalPages}, (_, i) => i + 1).map(page => \`
                                <li class="page-item \${currentPage === page ? 'active' : ''}">
                                    <a class="page-link" href="#" onclick="changePage(\${page})">\${page}</a>
                                </li>
                            \`).join('')}
                            <li class="page-item \${currentPage === totalPages ? 'disabled' : ''}">
                                <a class="page-link" href="#" onclick="changePage(\${currentPage + 1})">Next</a>
                            </li>
                        \`;
                    } catch (error) {
                        console.error('Error fetching orders:', error);
                    }
                }

                function getActionButtons(status, orderId) {
                    let buttons = '';
                    
                    if (status === 'received') {
                        buttons += \`<button class="btn btn-sm btn-primary me-1" onclick="updateStatus(\${orderId}, 'printing')">Move to Printing</button>\`;
                    } else if (status === 'printing') {
                        buttons += \`<button class="btn btn-sm btn-info me-1" onclick="updateStatus(\${orderId}, 'packaging')">Move to Packaging</button>\`;
                    } else if (status === 'packaging') {
                        buttons += \`<button class="btn btn-sm btn-success me-1" onclick="updateStatus(\${orderId}, 'completed')">Ready for Pickup</button>\`;
                    }
                    
                    return buttons;
                }

                async function updateStatus(orderId, newStatus) {
                    try {
                        const response = await fetch(\`/api/orders/\${orderId}\`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ status: newStatus })
                        });

                        if (response.ok) {
                            fetchOrders();
                        } else {
                            console.error('Error updating order status');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                }

                function changePage(page) {
                    if (page < 1) return;
                    currentPage = page;
                    fetchOrders();
                }

                // Initial fetch
                fetchOrders();
                // Refresh orders every 5 seconds
                setInterval(fetchOrders, 5000);
            </script>
        `
    }) %>
</body>
</html>
