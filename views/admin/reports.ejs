<%- include('layout', {
    title: 'Reports',
    path: '/admin/reports',
    style: `
        <style>
            .report-card {
                transition: transform 0.2s;
            }
            .report-card:hover {
                transform: translateY(-5px);
            }
            .chart-container {
                position: relative;
                height: 300px;
                margin-bottom: 2rem;
            }
            .status-counts {
                margin-top: 1rem;
                padding: 0.5rem;
                background-color: #f8f9fa;
                border-radius: 0.25rem;
            }
            .status-count-item {
                display: flex;
                justify-content: space-between;
                padding: 0.25rem 0;
                border-bottom: 1px solid #dee2e6;
            }
            .status-count-item:last-child {
                border-bottom: none;
            }
            .date-range {
                font-size: 0.9rem;
                color: #6c757d;
                margin-bottom: 1rem;
            }
        </style>
    `,
    body: `
        <div class="row g-4">
            <!-- Summary Cards -->
            <div class="col-md-4">
                <div class="card report-card">
                    <div class="card-body">
                        <h5 class="card-title">Daily Orders</h5>
                        <div class="date-range" id="dailyDateRange"></div>
                        <div id="dailyStats">Loading...</div>
                        <div class="status-counts" id="dailyStatusCounts"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card report-card">
                    <div class="card-body">
                        <h5 class="card-title">Weekly Orders</h5>
                        <div class="date-range" id="weeklyDateRange"></div>
                        <div id="weeklyStats">Loading...</div>
                        <div class="status-counts" id="weeklyStatusCounts"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card report-card">
                    <div class="card-body">
                        <h5 class="card-title">Monthly Orders</h5>
                        <div class="date-range" id="monthlyDateRange"></div>
                        <div id="monthlyStats">Loading...</div>
                        <div class="status-counts" id="monthlyStatusCounts"></div>
                    </div>
                </div>
            </div>

            <!-- Charts -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Order Status Distribution</h5>
                        <div class="chart-container">
                            <canvas id="statusChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Order Trends</h5>
                        <div class="chart-container">
                            <canvas id="trendChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Export Options -->
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Export Reports</h5>
                        <div class="btn-group" role="group">
                            <button class="btn btn-primary me-2" onclick="exportData('excel')">
                                <i class="bi bi-file-earmark-excel"></i> Export to Excel
                            </button>
                            <button class="btn btn-info me-2" onclick="exportData('csv')">
                                <i class="bi bi-file-earmark-text"></i> Export to CSV
                            </button>
                            <button class="btn btn-secondary" onclick="window.print()">
                                <i class="bi bi-printer"></i> Print Report
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `,
    script: `
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            let statusChart;
            let trendChart;

            function formatDate(date) {
                return new Intl.DateTimeFormat('en-NZ', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                }).format(date);
            }

            function updateDateRanges() {
                const now = new Date();
                
                // Daily (today)
                const dailyStart = new Date(now);
                document.getElementById('dailyDateRange').textContent = formatDate(dailyStart);

                // Weekly (last 7 days)
                const weeklyStart = new Date(now);
                weeklyStart.setDate(weeklyStart.getDate() - 6);
                document.getElementById('weeklyDateRange').textContent = 
                    \`\${formatDate(weeklyStart)} - \${formatDate(now)}\`;

                // Monthly (last 30 days)
                const monthlyStart = new Date(now);
                monthlyStart.setDate(monthlyStart.getDate() - 29);
                document.getElementById('monthlyDateRange').textContent = 
                    \`\${formatDate(monthlyStart)} - \${formatDate(now)}\`;
            }

            async function fetchReportData() {
                try {
                    const response = await fetch('/api/reports/summary');
                    const data = await response.json();
                    
                    updateDateRanges();
                    updateStatCards(data);
                    updateStatusCounts(data);
                    updateCharts(data);
                } catch (error) {
                    console.error('Error fetching report data:', error);
                }
            }

            function updateStatCards(data) {
                document.getElementById('dailyStats').innerHTML = \`
                    <p>Total: \${data.daily.total}</p>
                    <p>Completed: \${data.daily.completed}</p>
                    <p>In Progress: \${data.daily.inProgress}</p>
                \`;

                document.getElementById('weeklyStats').innerHTML = \`
                    <p>Total: \${data.weekly.total}</p>
                    <p>Completed: \${data.weekly.completed}</p>
                    <p>In Progress: \${data.weekly.inProgress}</p>
                \`;

                document.getElementById('monthlyStats').innerHTML = \`
                    <p>Total: \${data.monthly.total}</p>
                    <p>Completed: \${data.monthly.completed}</p>
                    <p>In Progress: \${data.monthly.inProgress}</p>
                \`;
            }

            function updateStatusCounts(data) {
                const periods = ['daily', 'weekly', 'monthly'];
                const statuses = ['received', 'settings', 'printing', 'finishing', 'releasing', 'billing', 'completed'];

                periods.forEach(period => {
                    const counts = data[period].statusCounts;
                    const html = statuses.map(status => \`
                        <div class="status-count-item">
                            <span class="text-capitalize">\${status}:</span>
                            <span class="fw-bold">\${counts[status]}</span>
                        </div>
                    \`).join('');
                    document.getElementById(\`\${period}StatusCounts\`).innerHTML = html;
                });
            }

            function updateCharts(data) {
                // Status Distribution Chart
                const statusCtx = document.getElementById('statusChart').getContext('2d');
                if (statusChart) {
                    statusChart.destroy();
                }
                statusChart = new Chart(statusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: Object.keys(data.statusBreakdown),
                        datasets: [{
                            data: Object.values(data.statusBreakdown),
                            backgroundColor: [
                                '#FFA500', // received
                                '#FFD580', // settings
                                '#FFB6C1', // printing
                                '#9370DB', // finishing
                                '#90EE90', // releasing
                                '#228B22', // billing
                                '#4CAF50'  // completed
                            ]
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right'
                            }
                        }
                    }
                });

                // Trend Chart
                const trendCtx = document.getElementById('trendChart').getContext('2d');
                if (trendChart) {
                    trendChart.destroy();
                }
                trendChart = new Chart(trendCtx, {
                    type: 'line',
                    data: {
                        labels: ['Daily', 'Weekly', 'Monthly'],
                        datasets: [{
                            label: 'Total Orders',
                            data: [
                                data.daily.total,
                                data.weekly.total,
                                data.monthly.total
                            ],
                            borderColor: '#4CAF50',
                            tension: 0.1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }

            async function exportData(format) {
                try {
                    const response = await fetch('/api/reports/export?format=' + format);
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'order_report.' + format;
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                } catch (error) {
                    console.error('Error exporting data:', error);
                    alert('Error exporting data. Please try again.');
                }
            }

            // Initial fetch
            fetchReportData();
            // Refresh data every minute
            setInterval(fetchReportData, 60000);
        </script>
    `
}) %>
