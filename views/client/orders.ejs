<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Orders</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .card {
            transition: transform 0.2s;
            margin-bottom: 1rem;
        }

        .status-badge {
            display: inline-block;
            padding: 0.35em 0.65em;
            font-size: 0.75em;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 0.25rem;
            color: #000;
        }

        .status-received { background-color: #FFA500 !important; } /* Orange */
        .status-settings { background-color: #FFD580 !important; } /* Light Orange */
        .status-printing { background-color: #FFB6C1 !important; } /* Pink */
        .status-releasing { background-color: #90EE90 !important; } /* Light Green */
        .status-billing { background-color: #228B22 !important; color: white !important; } /* Green with white text */

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <a class="navbar-brand" href="/">Job Order System</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Admin Login</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container my-4">
        <h2 class="mb-4">Job Orders</h2>
        <div class="row" id="ordersContainer">
            <!-- Orders will be loaded here -->
        </div>
    </div>

    <!-- Order Details Modal -->
    <div class="modal fade" id="orderModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Order Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="orderModalBody">
                    <!-- Order details will be loaded here -->
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let refreshInterval;

        async function fetchOrders() {
            try {
                const response = await fetch('/api/public/orders');
                if (!response.ok) throw new Error('Failed to fetch orders');
                
                const orders = await response.json();
                displayOrders(orders);
            } catch (error) {
                console.error('Error fetching orders:', error);
                const container = document.getElementById('ordersContainer');
                container.innerHTML = '<div class="alert alert-danger">Error loading orders. Please try again later.</div>';
            }
        }

        function displayOrders(orders) {
            const container = document.getElementById('ordersContainer');
            container.innerHTML = orders.map(order => `
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">${order.customer_name}</h5>
                            <p class="card-text">
                                <strong>Order ID:</strong> ${order.id}<br>
                                <strong>Date:</strong> ${new Date(order.created_at).toLocaleDateString()}<br>
                                <strong>Status:</strong> <span class="status-badge status-${order.status.toLowerCase()}">${order.status}</span>
                            </p>
                            <button class="btn btn-primary btn-sm" onclick="viewOrderDetails('${order.id}')">
                                View Details
                            </button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        async function viewOrderDetails(orderId) {
            try {
                const response = await fetch(`/api/public/orders/${orderId}`);
                const order = await response.json();
                
                const modalBody = document.getElementById('orderModalBody');
                modalBody.innerHTML = `
                    <dl class="row">
                        <dt class="col-sm-4">Customer Name</dt>
                        <dd class="col-sm-8">${order.customer_name}</dd>
                        
                        <dt class="col-sm-4">Order ID</dt>
                        <dd class="col-sm-8">${order.id}</dd>
                        
                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            <span class="badge bg-${getStatusColor(order.status)}">
                                ${order.status}
                            </span>
                        </dd>
                        
                        <dt class="col-sm-4">Created Date</dt>
                        <dd class="col-sm-8">${new Date(order.created_at).toLocaleString()}</dd>
                        
                        <dt class="col-sm-4">Description</dt>
                        <dd class="col-sm-8">${order.description || 'N/A'}</dd>
                    </dl>
                `;
                
                const modal = new bootstrap.Modal(document.getElementById('orderModal'));
                modal.show();
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function getStatusColor(status) {
            const colors = {
                'pending': 'warning',
                'in_progress': 'info',
                'completed': 'success',
                'cancelled': 'danger'
            };
            return colors[status] || 'secondary';
        }

        // Start auto-refresh when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            fetchOrders(); // Initial fetch
            
            // Set up auto-refresh every 2 seconds
            refreshInterval = setInterval(fetchOrders, 2000);
        });

        // Clean up interval when leaving the page
        window.addEventListener('beforeunload', () => {
            if (refreshInterval) {
                clearInterval(refreshInterval);
            }
        });
    </script>
</body>
</html>
